<#
.Name
    Notification_Monthly_Patch_Reboots

.Synopsis
    Basic notification for lettings people know what servers will be rebooted over the maintenance window.

.Syntax
    None

.Description
    

#>

#This calculates patch tuesday of the month which allows us to then calculate the dev and prod patch weekends
$BaseDate = ( Get-Date -Day 12 ).Date
$PatchTuesday = $BaseDate.AddDays( 2 - [int]$BaseDate.DayOfWeek )

$datesat=$patchtuesday.adddays(11)
$datesat=$datesat.ToString('MM-dd-yyyy')

$datesun=$patchtuesday.adddays(12)
$datesun=$datesun.ToString('MM-dd-yyyy')

$datedev=$patchtuesday.adddays(5)
$datedev=$datedev.ToString('MM-dd-yyyy')

#These variables are used to specify the different OUs for the server enviornments and days they are patched.
$searchbasesat ="ou=mgmt-sat,ou=dr servers,dc=MyDomain,dc=com",
"ou=mgmt-sat,ou=office1 servers,dc=MyDomain,dc=com",
"ou=mgmt-sat,ou=office2 servers,dc=MyDomain,dc=com",
"ou=mgmt-sat,ou=office3 servers,dc=MyDomain,dc=com"

$searchbasesun ="ou=mgmt-sun,ou=dr servers,dc=MyDomain,dc=com",
"ou=mgmt-sun,ou=office1 servers,dc=MyDomain,dc=com",
"ou=mgmt-sun,ou=office2 prod servers,dc=MyDomain,dc=com"

$searchbasedev = "ou=mgmt-sun,ou=office1 dev,dc=MyDomain,dc=com",
"ou=mgmt-sun,ou=office2 dev,dc=MyDomain,dc=com"

#temp directory to hold the files
$loc = "c:\temp"

#3rd saturdays loop
$forloopsat = foreach ($base in $searchbasesat) {
    get-adcomputer -filter * -SearchBase $base | Select-Object name | Sort-Object Name 
}
$forloopsat | export-csv "$loc\ProdSatReboots.csv"

#3rd sundays loop
$forloopsun = foreach ($base in $searchbasesun) {
    get-adcomputer -filter * -SearchBase $base | Select-Object name | Sort-Object Name
}
$forloopsun | export-csv "$loc\ProdSunReboots.csv"

#2nd sunday dev loop
$forloopdev = foreach ($base in $searchbasedev) {
    get-adcomputer -filter * -SearchBase $base | Select-Object name | Sort-Object Name
}
$forloopdev | export-csv "$loc\DevSunReboots.csv"

#this section is to consolidate the generated csv files
#the DMZ files are generated by another task that's running on a DMZ server and doing similar for each loops
Start-Sleep -Seconds 20
@(import-csv "$loc\ProdSunReboots.csv") + @(import-csv "$loc\dmzfiles\dmzprodsunreboots.csv") | sort-object name | export-csv "$loc\Production-Sunday.csv"
@(import-csv "$loc\ProdSatReboots.csv") + @(import-csv "$loc\dmzfiles\dmzprodsatreboots.csv") | sort-object name | export-csv "$loc\Production-Saturday.csv"
@(import-csv "$loc\DevSunReboots.csv") + @(import-csv "$loc\dmzfiles\dmzdevsunreboots.csv") | sort-object name |export-csv "$loc\Development-Sunday.csv"

#This section is for the message to be sent out from the server.
$messageparameters = @{
subject="PLEASE REVIEW: Microsoft Security Updates for All Servers - Scheduled Reboots"
body ="
Good Morning,
<p>The Infrastructure team will patch all Development and Production Servers over the next two weekends to ensure they are fully compliant with Microsoft Security Updates.  This will require a REBOOT or possibly multiple reboots until all patches are fully installed.  Please reference the below patching schedule and attached files for a full list of servers being patched each day.<br>
<br>
<b> Production Servers</b> $datesat at 1:00 AM local time and $datesun at 1:00 AM local time.<br>
<br>
<b> Development Servers</b> $datedev at 1:00 AM local time.<br>
<br>
<b>REMINDER: **Please remember to test functionality for ALL Applications on Tst, Dev, QA, and Stg Servers next week prior to scheduled Production Server patching.**</b><br>
<br>
<p>Thank you for your support! <br>
<br>
</P>"
From = "noreply@MyDomain.com"
TO = "IT@MyDomain.com"
Smtpserver= "smtp.MyDomain.com"
Attachments = "$loc\Development-Sunday.csv","$loc\Production-Saturday.csv","$loc\Production-Sunday.csv"
}
Send-MailMessage @messageparameters -BodyAsHtml